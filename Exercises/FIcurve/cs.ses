objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}

//Begin PointProcessGroupManager
{
load_file("pointgrp.hoc")
}
{
ocbox_ = new PointProcessGroupManager(0)
}
{object_push(ocbox_)}
{
ms = new MechanismStandard("APCount")
ms.set("n", 0, 0)
ms.set("thresh", -20, 0)
ms.set("time", 56.796, 0)
mnews("APCount", ms)
select(0)
execute("soma ocbox_.move(0.5)")
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessGroupManager", 1006, 529, 556.8, 295.68)
}
objref ocbox_
//End PointProcessGroupManager

{WindowMenu[0].ses_gid(1, 0, 1, "Session")}
{
save_window_ = new Graph(0)
save_window_.size(0,1050,-80,40)
scene_vector_[3] = save_window_
{save_window_.view(0, -80, 1050, 120, 681, 26, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}
{WindowMenu[0].ses_gid(0, 0, 1, "Session")}
{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 0
xvalue("t","t", 2 )
tstop = 1050
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(0,107)
}
{WindowMenu[0].ses_gid(0, 0, 1, "Session")}
{
save_window_ = new Graph(0)
save_window_.size(0,1050,0,0.0065)
scene_vector_[4] = save_window_
{save_window_.view(0, 0, 1050, 0.0065, 681, 292, 300.48, 200.32)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addvar("soma.g_csk( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addvar("soma.g_cska( 0.5 )", 2, 1, 0.8, 0.9, 2)
save_window_.addvar("soma.g_csna( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.g_csl( 0.5 )", 5, 1, 0.8, 0.9, 2)
}
{WindowMenu[0].ses_gid(0, 0, 1, "Session")}
{
save_window_ = new Graph(0)
save_window_.size(0,1050,-0.0205092,0.0275991)
scene_vector_[5] = save_window_
{save_window_.view(0, -0.0205092, 1050, 0.0481083, 681, 558, 300.48, 200.32)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.i_csk( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.i_cska( 0.5 )", 2, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.i_csna( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.i_csl( 0.5 )", 5, 1, 0.8, 0.9, 2)
}
{WindowMenu[0].ses_gid(0, 0, 1, "Session")}
{
xpanel("soma(0 - 1) (Parameters)", 0)
xlabel("soma(0 - 1) (Parameters)")
xlabel("nseg = 1")
soma.L = 100
xvalue("L","soma.L", 1,"define_shape()", 0, 0 )
soma.Ra = 35.4
xvalue("Ra","soma.Ra", 1,"soma.Ra += 0", 0, 1 )
soma.diam = 500
xvalue("diam","soma.diam", 1,"", 0, 0 )
soma.cm = 1
xvalue("cm","soma.cm", 1,"", 0, 0 )
soma.gbar_csna = 0.12
xvalue("gbar_csna","soma.gbar_csna", 1,"", 0, 0 )
soma.ena = 50
xvalue("ena","soma.ena", 1,"", 0, 0 )
soma.gbar_csk = 0.02
xvalue("gbar_csk","soma.gbar_csk", 1,"", 0, 0 )
soma.gbar_cska = 0.0477
xvalue("gbar_cska","soma.gbar_cska", 1,"", 0, 0 )
soma.ek = -77
xvalue("ek","soma.ek", 1,"", 0, 0 )
soma.g_csl = 0.0003
xvalue("g_csl","soma.g_csl", 1,"", 0, 0 )
soma.e_csl = -22
xvalue("e_csl","soma.e_csl", 1,"", 0, 0 )
xpanel(372,203)
}
{WindowMenu[0].ses_gid(0, 0, 1, "Session")}

//Begin Grapher
{
load_file("grapher.hoc")}
{
ocbox_=new Grapher(1)

ocbox_.info("stim.amp","stim.amp", "run()", 0, 10, -10, 10, 40, 0, 20)
{
save_window_=ocbox_.g
save_window_.size(0,10,-10,10)
scene_vector_[6] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.xexpr("stim.amp", 0)
save_window_.addexpr("APCount[0].n", 1, 1, 0.8, 0.9, 2)
}
ocbox_ = ocbox_.vbox
ocbox_.map("Grapher", 1006, 28, 255.36, 453.12)
}
objref ocbox_
//End Grapher

{WindowMenu[0].ses_gid(0, 0, 1, "Session")}

//Begin VariableTimeStep
{
ocbox_ = NumericalMethodPanel[0]
}
{object_push(ocbox_)}
{
atol_ = 0.001  CVode[0].atol(atol_)
restore(301, 1)
}
{object_pop()}
{
ocbox_.map("VariableTimeStep", 0, 509, 272.64, 113.28)
}
objref ocbox_
//End VariableTimeStep

{WindowMenu[0].ses_gid(0, 0, 1, "Session")}
objectvar scene_vector_[1]
{doNotify()}
